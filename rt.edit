#!/usr/bin/env bash
set -e

helpstr="\
NAME
    rt.edit - edit RT ticket

SYNOPSIS
    rt.edit TICKET...

DESCRIPTION
    As of writing, the only supported action is setting the status.  By 
    default, this will ask for confirmation, after displaying some info about 
    the ticket.

OPTIONS
    -s, --status STATUS
        Set the ticket's status to the given STATUS.

    -c, --confirm yes|no
        Whether or not to confirm before merging.
        Default is yes.

    -h, --help
        Print this help.

REQUIREMENTS
    rt cli

AUTHOR
    John Brunelle
"

status=''
confirm=true

prefix=''  #set to echo intead of running, set to empty string for normal operation

args=$(getopt -l status:,confirm:,help -o s:c:h -- "$@")
if [ $? -ne 0 ]; then
	exit 65  #(getopt will have written the error message)
fi
eval set -- "$args"
while [ ! -z "$1" ]; do
	case "$1" in
		-s | --status)
			status="$2"
			shift
			#don't check possible status values, as new ones can be added to rt; let the command fail below
			;;
		-c | --confirm)
			if   [ "$2" = 'yes' ]; then
				confirm=true
			elif [ "$2" = 'no' ]; then
				confirm=false
			else
				echo "*** ERROR *** -c/--confirm must be yes or no" >&2
				exit 1
			fi
			shift
			;;

		-h | --help)
			echo -n "$helpstr"
			exit 0
			;;
		--) 
			shift
			break
			;;
	esac
	shift
done

if ! which rt &> /dev/null; then
	echo -n "*** ERROR *** rt command not found" >&2
	[[ "$(hostname -f)" == *.rc.fas.harvard.edu ]] && echo -n " (module load hpc/rt)" >&2
	echo >&2
	exit 1
fi

if [ -z "$status" ]; then
	echo "*** ERROR *** must provide a --status" >&2
	exit 1
fi

set -u

#---

ask () {
	! $confirm && return 0
	prompt="$1"  #(don't include question mark, y/n, or trailing whitespace)
	read -p "$prompt [y/n]? " answer
	[[ "$answer" == y* ]] || [[ "$answer" == Y* ]]
	return $?
}

for tid in "$@"; do
	echo "$tid"
	echo '---'
	rt show ticket/"$tid" -f Requestors,Subject,Owner | grep -v '^id: ticket' | rt.realnames
	echo '---'
	if ask "set status to $status"; then
		$prefix rt edit ticket/"$tid" set status="$status"
	fi
	echo
done
